version: '3.3'
services:

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181"
    hostname: zookeeper
    restart: always
    volumes:
      - /home/azureuser/zookeeper/data:/opt/zookeeper-3.4.13/data

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    command: [ start-kafka.sh ]
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1"
      KAFKA_ADVERTISED_HOST_NAME: kafka3855.eastus.cloudapp.azure.com
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://kafka3855.eastus.cloudapp.azure.com:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/kafka-logs
      KAFKA_BROKER_ID: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/azureuser/kafka:/kafka/kafka-logs
    depends_on:
      - "zookeeper"
    restart: always

  db:
    image: mysql:5.7
    container_name: db
    restart: always
    environment:
      MYSQL_DATABASE: 'events'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - my-db:/var/lib/mysql
      
  receiver:
    build: ../receiver
    image: receiver
    container_name: receiver
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/azureuser/config/receiver:/config
      - /home/azureuser/logs:/logs
    ports: 
      - '8080:8080'
    depends_on:
      - "kafka"

  storage:
    build: ../storage
    image: storage
    container_name: storage
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/azureuser/config/storage:/config
      - /home/azureuser/logs:/logs

    ports:
      - "8090:8090"
    expose:
      - "8090"
    depends_on:
        - db
        - kafka


  processing:
    build: ../processing
    image: processing
    container_name: processing
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/azureuser/config/processing:/config
      - /home/azureuser/logs:/logs
      - processing-db:/data
    network_mode: "host"
    depends_on:
      - storage
    restart: always

  audit_log:
    build: ../audit_log
    image: audit_log
    container_name: audit_log
    ports:
      - "8110:8110"
    depends_on:
      - kafka
    environment:
      - TARGET_ENV=test
    volumes:
      - /home/azureuser/config/audit_log:/config
      - /home/azureuser/logs:/logs
    restart: always

  dashboard:
    build: ../dashboard-ui
    container_name: dashboard
    ports:
      - "3000:3000"
    depends_on:
      - "processing"
      - "audit_log"
    restart: always

volumes:
  my-db:
  processing-db:
