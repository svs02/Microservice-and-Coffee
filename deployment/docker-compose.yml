version: '3.3'
services:

  kafka:
    image: wurstmeister/kafka
    command: [ start-kafka.sh ]
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1"
      KAFKA_ADVERTISED_HOST_NAME: kafka3855.eastus.cloudapp.azure.com
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://kafka3855.eastus.cloudapp.azure.com:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - "zookeeper"

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181"
    hostname: zookeeper

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'events'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - my-db:/var/lib/mysql
  receiver:
    build: ../receiver
    depends_on:
      - kafka
    ports:
      - "8080:8080"
  storage:
    build: ../storage
    ports:
      - "8090:8090"
    expose:
      - 8090
    depends_on:
      - db
      - kafka
  processing:
    build: ../processing
    depends_on:
      - storage
    network_mode: host
    volumes:
      - my-db:/var/lib/sqlite
  audit_log:
    build: ../audit_log
    ports:
      - "8110:8110"
    depends_on:
      - kafka
volumes:
  my-db:
